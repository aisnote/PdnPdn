<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 9.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="1.36">
 <Targets>
  <Target Name="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\bin\Release\PaintDotNet.SystemLayer.dll">
   <Modules>
    <Module Name="paintdotnet.systemlayer.dll">
     <Namespaces>
      <Namespace Name="PaintDotNet.SystemLayer">
       <Types>
        <Type Name="ExecuteWaitType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RelaunchPdnOnExit" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Pdn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pdn' in member name 'ExecuteWaitType.RelaunchPdnOnExit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Relaunch" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Relaunch' in member name 'ExecuteWaitType.RelaunchPdnOnExit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileSystem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadFromStreamScatter(System.IO.FileStream,System.Void*[],System.UInt32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ppv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FileSystem.cs" Line="406">In method 'FileSystem.ReadFromStreamScatter(FileStream, void*[], uint[])', correct the spelling of 'ppv' in parameter name 'ppvBuffers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToStream(System.IO.FileStream,System.Void*,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Name="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FileSystem.cs" Line="158">Remove the call to SafeHandle.DangerousGetHandle from 'FileSystem.WriteToStream(FileStream, void*, uint)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToStreamingFileGather(System.IO.FileStream,System.Void*[],System.UInt32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Name="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FileSystem.cs" Line="376">Remove the call to SafeHandle.DangerousGetHandle from 'FileSystem.WriteToStreamingFileGather(FileStream, void*[], uint[])'.</Issue>
            </Message>
            <Message Id="ppv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FileSystem.cs" Line="366">In method 'FileSystem.WriteToStreamingFileGather(FileStream, void*[], uint[])', correct the spelling of 'ppv' in parameter name 'ppvBuffers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Fonts" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DrawText(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Drawing.Point,System.Boolean,PaintDotNet.SystemLayer.FontSmoothing)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Fonts.cs" Line="195">In method 'Fonts.DrawText(Graphics, Font, string, Point, bool, FontSmoothing)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureString(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Boolean,PaintDotNet.SystemLayer.FontSmoothing)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Fonts.cs" Line="102">In method 'Fonts.MeasureString(Graphics, Font, string, bool, FontSmoothing)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormEx" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Windows.Forms.Form,PaintDotNet.SystemLayer.RealParentWndProcDelegate)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FormEx.cs" Line="54">In method 'FormEx.FormEx(Form, RealParentWndProcDelegate)', correct the spelling of 'Wnd' in parameter name 'realParentWndProc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleParentWndProc(System.Windows.Forms.Message&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FormEx.cs" Line="138">Correct the spelling of 'Wnd' in member name 'FormEx.HandleParentWndProc(ref Message)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="FormEx.cs" Line="138">In method 'FormEx.HandleParentWndProc(ref Message)', consider providing a more meaningful name than parameter name 'm'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IFileOpenDialog" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Multiselect" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multiselect" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multiselect' in member name 'IFileOpenDialog.Multiselect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IInkHooks" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PerformDocumentMouseDown(System.Windows.Forms.MouseButtons,System.Int32,System.Single,System.Single,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseDown(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseDown(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PerformDocumentMouseMove(System.Windows.Forms.MouseButtons,System.Int32,System.Single,System.Single,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseMove(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseMove(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PerformDocumentMouseUp(System.Windows.Forms.MouseButtons,System.Int32,System.Single,System.Single,System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseUp(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IInkHooks.PerformDocumentMouseUp(MouseButtons, int, float, float, int, float)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Memory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Copy(System.IntPtr,System.IntPtr,System.UInt64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Memory.cs" Line="330">In method 'Memory.Copy(IntPtr, IntPtr, ulong)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Copy(System.Void*,System.Void*,System.UInt64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Memory.cs" Line="342">In method 'Memory.Copy(void*, void*, ulong)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#EnumWindows(PaintDotNet.SystemLayer.NativeDelegates+EnumWindowsProc,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'NativeMethods.EnumWindows(NativeDelegates.EnumWindowsProc, IntPtr)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaitForInputIdle(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'NativeMethods.WaitForInputIdle(IntPtr, uint)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PdnGraphics" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pdn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pdn' in type name 'PdnGraphics'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DrawBitmap(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Drawing2D.Matrix,System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PdnGraphics.cs" Line="144">In method 'PdnGraphics.DrawBitmap(Graphics, Rectangle, Matrix, IntPtr, int, int)', correct the spelling of 'src' in parameter name 'srcBitmapHandle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PdnGraphics.cs" Line="144">In method 'PdnGraphics.DrawBitmap(Graphics, Rectangle, Matrix, IntPtr, int, int)', correct the spelling of 'src' in parameter name 'srcOffsetX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PdnGraphics.cs" Line="144">In method 'PdnGraphics.DrawBitmap(Graphics, Rectangle, Matrix, IntPtr, int, int)', correct the spelling of 'src' in parameter name 'srcOffsetY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawPolyLine(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PdnGraphics.cs" Line="321">In method 'PdnGraphics.DrawPolyLine(Graphics, Color, Point[])', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillRectangles(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PdnGraphics.cs" Line="413">In method 'PdnGraphics.FillRectangles(Graphics, Color, Rectangle[])', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProcessorFeature" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'ProcessorFeature' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PropertyItem2" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetProperty(System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PropertyItem2.cs" Line="126">'PropertyItem2.GetProperty(string, string)' makes a call to 'string.IndexOf(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.IndexOf(string, StringComparison)'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="PropertyItem2.cs" Line="127">'PropertyItem2.GetProperty(string, string)' makes a call to 'string.IndexOf(string, int)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.IndexOf(string, int, StringComparison)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RealParentWndProcDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wnd' in type name 'RealParentWndProcDelegate'.</Issue>
          </Message>
          <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'RealParentWndProcDelegate', consider providing a more meaningful name than parameter name 'm'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ScanningAndPrinting" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Print(System.Windows.Forms.Control,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="ScanningAndPrinting.cs" Line="85">'ScanningAndPrinting.Print(Control, string)' makes a call to 'string.Compare(string, string, bool)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.Compare(string, string, StringComparison)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetStrings(System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="nvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Settings.cs" Line="202">In method 'Settings.SetStrings(NameValueCollection)', correct the spelling of 'nvc' in parameter name 'nvc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SingleInstanceManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FilterMessage(System.Windows.Forms.Message&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="SingleInstaceManager.cs" Line="203">In method 'SingleInstanceManager.FilterMessage(ref Message)', consider providing a more meaningful name than parameter name 'm'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadBackground" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RemoveEmptyFinalizers" Category="Microsoft.Performance" CheckId="CA1821" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'ThreadBackground' implements a finalizer that only calls conditionally emitted methods or the base type finalizer. Remove the finalizer or ensure that it is only conditionally compiled into the assembly. If this violation occurs against a finalizer that is entirely wrapped in a conditionally-emitted block of code, suppress this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolStripEx" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TextBox_Leave(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="ToolStripEx.cs" Line="183">'ToolStripEx.TextBox_Leave(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Tracing" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteLine(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="Tracing.cs" Line="31">'Tracing.WriteLine(string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DetermineVisualStyleClassImpl()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="550">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="550">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="555">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="555">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="558">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="558">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="558">'UI.DetermineVisualStyleClassImpl()' passes StringComparison.InvariantCulture as an argument to 'string.Compare(string, string, StringComparison)'. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawCommandButton(System.Drawing.Graphics,System.Windows.Forms.VisualStyles.PushButtonState,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="175">In method 'UI.DrawCommandButton(Graphics, PushButtonState, Rectangle, Color, Control)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HideHorizontalScrollBar(System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="601">In method 'UI.HideHorizontalScrollBar(Control)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitScaling(System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="UI.cs" Line="112">In method 'UI.InitScaling(Control)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaitHandleArray" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[System.Int32]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Item(System.Int32,System.Threading.WaitHandle)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
               <Issue Name="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" Certainty="75" Level="Error" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer" File="WaitHandleArray.cs" Line="52">Remove the call to SafeHandle.DangerousGetHandle from 'WaitHandleArray.this.set(int, WaitHandle)'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PaintDotNet.SystemLayer.GpcWrapper">
       <Types>
        <Type Name="Polygon" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Clip(System.Drawing.Drawing2D.CombineMode,PaintDotNet.SystemLayer.GpcWrapper.Polygon)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\GpcWrapper" File="Polygon.cs" Line="93">'Polygon.Clip(CombineMode, Polygon)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VertexList" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(PaintDotNet.SystemLayer.GpcWrapper.Vertex[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\GpcWrapper" File="VertexList.cs" Line="26">'VertexList.VertexList(Vertex[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(PaintDotNet.SystemLayer.GpcWrapper.Vertex[],System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\GpcWrapper" File="VertexList.cs" Line="31">'VertexList.VertexList(Vertex[], bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToGraphicsPath()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\GpcWrapper" File="VertexList.cs" Line="55">'VertexList.ToGraphicsPath()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TristripToGraphicsPath()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-09 06:22:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\my_project\OpenPDN\openpdn-e28f1ff0077e\src\SystemLayer\GpcWrapper" File="VertexList.cs" Line="72">'VertexList.TristripToGraphicsPath()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001">
   <Name>Avoid calling problematic methods</Name>
   <Description>Avoid making unnecessary and potentially dangerous method calls.</Description>
   <Resolution Name="System.Runtime.InteropServices.SafeHandle.DangerousGetHandle">Remove the call to SafeHandle.DangerousGetHandle from {0}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb385973(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="ReliabilityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182264(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb264486(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb264492(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveEmptyFinalizers" Category="Microsoft.Performance" CheckId="CA1821">
   <Name>Remove empty finalizers</Name>
   <Description>Finalizers should be avoided where possible, to avoid the additional performance overhead involved in tracking object lifetime.</Description>
   <Resolution Name="Default">{0} implements a finalizer that only calls conditionally emitted methods or the base type finalizer. Remove the finalizer or ensure that it is only conditionally compiled into the assembly. If this violation occurs against a finalizer that is entirely wrapped in a conditionally-emitted block of code, suppress this message.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb264476(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a StringComparison. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb386080(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparison">{0} passes {1} as an argument to {2}. Replace this usage with StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb385972(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
