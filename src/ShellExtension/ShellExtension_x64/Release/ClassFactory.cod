; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?LockServer@CClassFactory@@UEAAJH@Z		; CClassFactory::LockServer
PUBLIC	?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z ; CClassFactory::CreateInstance
PUBLIC	?Release@CClassFactory@@UEAAKXZ			; CClassFactory::Release
PUBLIC	?AddRef@CClassFactory@@UEAAKXZ			; CClassFactory::AddRef
PUBLIC	?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CClassFactory::QueryInterface
PUBLIC	??0IUnknown@@QEAA@XZ				; IUnknown::IUnknown
PUBLIC	??0IClassFactory@@QEAA@XZ			; IClassFactory::IClassFactory
PUBLIC	IsEqualGUID
PUBLIC	??_GCClassFactory@@QEAAPEAXI@Z			; CClassFactory::`scalar deleting destructor'
PUBLIC	??_C@_09HJFDPDEO@enter?3?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0BO@IPJPEPMI@CClassFactory?3?3QueryInterface?$AA@ ; `string'
PUBLIC	??_C@_07IEJOJKLC@riid?$DN?$CFS?$AA@		; `string'
PUBLIC	??_C@_0BD@EIAEKNOG@leave?3?5?$CFs?0?5hr?$DN0x?$CFx?$AA@ ; `string'
PUBLIC	??_C@_0BO@NADKBOKF@CClassFactory?3?3CreateInstance?$AA@ ; `string'
PUBLIC	??_7CClassFactory@@6B@				; CClassFactory::`vftable'
EXTRN	__security_check_cookie:PROC
EXTRN	IID_IUnknown:BYTE
EXTRN	IID_IClassFactory:BYTE
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
;	COMDAT ??_7CClassFactory@@6B@
CONST	SEGMENT
??_7CClassFactory@@6B@ DQ FLAT:?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CClassFactory::`vftable'
	DQ	FLAT:?AddRef@CClassFactory@@UEAAKXZ
	DQ	FLAT:?Release@CClassFactory@@UEAAKXZ
	DQ	FLAT:?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?LockServer@CClassFactory@@UEAAJH@Z
CONST	ENDS
;	COMDAT ??_C@_0BO@NADKBOKF@CClassFactory?3?3CreateInstance?$AA@
CONST	SEGMENT
??_C@_0BO@NADKBOKF@CClassFactory?3?3CreateInstance?$AA@ DB 'CClassFactory'
	DB	'::CreateInstance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EIAEKNOG@leave?3?5?$CFs?0?5hr?$DN0x?$CFx?$AA@
CONST	SEGMENT
??_C@_0BD@EIAEKNOG@leave?3?5?$CFs?0?5hr?$DN0x?$CFx?$AA@ DB 'leave: %s, hr'
	DB	'=0x%x', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07IEJOJKLC@riid?$DN?$CFS?$AA@
CONST	SEGMENT
??_C@_07IEJOJKLC@riid?$DN?$CFS?$AA@ DB 'riid=%S', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IPJPEPMI@CClassFactory?3?3QueryInterface?$AA@
CONST	SEGMENT
??_C@_0BO@IPJPEPMI@CClassFactory?3?3QueryInterface?$AA@ DB 'CClassFactory'
	DB	'::QueryInterface', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJFDPDEO@enter?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_09HJFDPDEO@enter?3?5?$CFs?$AA@ DB 'enter: %s', 00H ; `string'
; Function compile flags: /Ogspy
; File e:\my_project\openpdn\openpdn-e28f1ff0077e\src\shellextension\classfactory.cpp
;	COMDAT ?LockServer@CClassFactory@@UEAAJH@Z
_TEXT	SEGMENT
this$ = 8
fLock$ = 16
?LockServer@CClassFactory@@UEAAJH@Z PROC		; CClassFactory::LockServer, COMDAT

; 136  :     return E_NOTIMPL;

  00000	b8 01 40 00 80	 mov	 eax, -2147467263	; ffffffff80004001H

; 137  : }

  00005	c3		 ret	 0
?LockServer@CClassFactory@@UEAAJH@Z ENDP		; CClassFactory::LockServer
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT ?AddRef@CClassFactory@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CClassFactory@@UEAAKXZ PROC			; CClassFactory::AddRef, COMDAT

; 71   :     return InterlockedIncrement(&m_lRefCount);

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	f0 0f c1 41 08	 lock xadd DWORD PTR [rcx+8], eax
  0000a	ff c0		 inc	 eax

; 72   : }

  0000c	c3		 ret	 0
?AddRef@CClassFactory@@UEAAKXZ ENDP			; CClassFactory::AddRef
_TEXT	ENDS
PUBLIC	?Destructor@CClassFactory@@QEAAXXZ		; CClassFactory::Destructor
; Function compile flags: /Ogspy
;	COMDAT ?Destructor@CClassFactory@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Destructor@CClassFactory@@QEAAXXZ PROC			; CClassFactory::Destructor, COMDAT

; 39   :     InterlockedDecrement (&g_lRefCount);

  00000	f0 83 05 00 00
	00 00 ff	 lock add DWORD PTR ?g_lRefCount@@3JC, -1 ; g_lRefCount

; 40   :     return;
; 41   : }

  00008	c3		 ret	 0
?Destructor@CClassFactory@@QEAAXXZ ENDP			; CClassFactory::Destructor
_TEXT	ENDS
PUBLIC	??1CClassFactory@@QEAA@XZ			; CClassFactory::~CClassFactory
; Function compile flags: /Ogspy
;	COMDAT ??1CClassFactory@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CClassFactory@@QEAA@XZ PROC				; CClassFactory::~CClassFactory, COMDAT

; 32   : {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CClassFactory@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 33   :     Destructor();

  0000a	f0 83 05 00 00
	00 00 ff	 lock add DWORD PTR ?g_lRefCount@@3JC, -1 ; g_lRefCount

; 34   :     return;
; 35   : }

  00012	c3		 ret	 0
??1CClassFactory@@QEAA@XZ ENDP				; CClassFactory::~CClassFactory
_TEXT	ENDS
PUBLIC	?Constructor@CClassFactory@@QEAAXU_GUID@@@Z	; CClassFactory::Constructor
; Function compile flags: /Ogspy
;	COMDAT ?Constructor@CClassFactory@@QEAAXU_GUID@@@Z
_TEXT	SEGMENT
this$ = 8
clsid$ = 16
?Constructor@CClassFactory@@QEAAXU_GUID@@@Z PROC	; CClassFactory::Constructor, COMDAT

; 25   :     m_clsidObject = clsid;

  00000	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [rdx]

; 26   :     m_lRefCount = 1;

  00004	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [rcx+8], 1
  0000b	f3 0f 7f 41 0c	 movdqu	 XMMWORD PTR [rcx+12], xmm0

; 27   :     InterlockedIncrement(&g_lRefCount);

  00010	f0 83 05 00 00
	00 00 01	 lock add DWORD PTR ?g_lRefCount@@3JC, 1 ; g_lRefCount

; 28   :     return;
; 29   : }

  00018	c3		 ret	 0
?Constructor@CClassFactory@@QEAAXU_GUID@@@Z ENDP	; CClassFactory::Constructor
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IUnknown@@QEAA@XZ PROC				; IUnknown::IUnknown, COMDAT
  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0IUnknown@@QEAA@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT ??0IClassFactory@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IClassFactory@@QEAA@XZ PROC				; IClassFactory::IClassFactory, COMDAT
  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0IClassFactory@@QEAA@XZ ENDP				; IClassFactory::IClassFactory
_TEXT	ENDS
PUBLIC	??0CClassFactory@@QEAA@U_GUID@@@Z		; CClassFactory::CClassFactory
; Function compile flags: /Ogspy
;	COMDAT ??0CClassFactory@@QEAA@U_GUID@@@Z
_TEXT	SEGMENT
this$ = 8
clsid$ = 16
??0CClassFactory@@QEAA@U_GUID@@@Z PROC			; CClassFactory::CClassFactory, COMDAT

; 19   :     Constructor(clsid);

  00000	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [rdx]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CClassFactory@@6B@
  0000b	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [rcx+8], 1
  00012	48 89 01	 mov	 QWORD PTR [rcx], rax
  00015	f3 0f 7f 41 0c	 movdqu	 XMMWORD PTR [rcx+12], xmm0
  0001a	f0 83 05 00 00
	00 00 01	 lock add DWORD PTR ?g_lRefCount@@3JC, 1 ; g_lRefCount

; 20   :     return;
; 21   : }

  00022	48 8b c1	 mov	 rax, rcx
  00025	c3		 ret	 0
??0CClassFactory@@QEAA@U_GUID@@@Z ENDP			; CClassFactory::CClassFactory
; Function compile flags: /Ogspy
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
_TEXT	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
rguid1$ = 8
rguid2$ = 16
IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	45 33 c0	 xor	 r8d, r8d
  00006	48 3b 02	 cmp	 rax, QWORD PTR [rdx]
  00009	75 0f		 jne	 SHORT $LN3@IsEqualGUI
  0000b	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  0000f	48 3b 42 08	 cmp	 rax, QWORD PTR [rdx+8]
  00013	75 05		 jne	 SHORT $LN3@IsEqualGUI
  00015	41 8b c0	 mov	 eax, r8d
  00018	eb 05		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  0001a	1b c0		 sbb	 eax, eax
  0001c	83 d8 ff	 sbb	 eax, -1
$LN4@IsEqualGUI:
  0001f	41 3b c0	 cmp	 eax, r8d
  00022	41 0f 94 c0	 sete	 r8b
  00026	41 8b c0	 mov	 eax, r8d

; 162  : }

  00029	c3		 ret	 0
IsEqualGUID ENDP
;	COMDAT pdata
; File e:\my_project\openpdn\openpdn-e28f1ff0077e\src\shellextension\classfactory.cpp
pdata	SEGMENT
$pdata$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN30
	DD	imagerel $LN30+172
	DD	imagerel $unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogspy
xdata	ENDS
;	COMDAT ?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
pUnkOuter$ = 56
riid$ = 64
ppvObject$ = 72
?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z PROC ; CClassFactory::CreateInstance, COMDAT

; 90   : {

$LN30:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f9	 mov	 rdi, r9
  00012	49 8b f0	 mov	 rsi, r8

; 91   :     void *pvResult = NULL;
; 92   :     HRESULT hr = S_OK;
; 93   : 
; 94   :     TraceEnter();
; 95   :     TraceOut("riid=%S", GuidToString(riid));
; 96   : 
; 97   :     if (SUCCEEDED(hr))
; 98   :     {
; 99   :         if (NULL == ppvObject)

  00015	4d 85 c9	 test	 r9, r9
  00018	75 07		 jne	 SHORT $LN27@CreateInst

; 100  :         {
; 101  :             hr = E_INVALIDARG;

  0001a	bf 57 00 07 80	 mov	 edi, -2147024809	; ffffffff80070057H

; 102  :         }
; 103  :     }
; 104  : 
; 105  :     if (SUCCEEDED(hr))

  0001f	eb 79		 jmp	 SHORT $LN2@CreateInst
$LN27@CreateInst:

; 106  :     {
; 107  :         if (pUnkOuter != NULL)

  00021	48 85 d2	 test	 rdx, rdx
  00024	74 07		 je	 SHORT $LN28@CreateInst

; 108  :         {
; 109  :             hr = CLASS_E_NOAGGREGATION;

  00026	bf 10 01 04 80	 mov	 edi, -2147221232	; ffffffff80040110H

; 110  :         }
; 111  :     }
; 112  : 
; 113  :     CPdnShellExtension *pShellExtension = NULL;
; 114  :     if (SUCCEEDED(hr))

  0002b	eb 6d		 jmp	 SHORT $LN2@CreateInst
$LN28@CreateInst:

; 115  :     {
; 116  :         pShellExtension = new CPdnShellExtension();

  0002d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00037	48 8b d8	 mov	 rbx, rax
  0003a	48 85 c0	 test	 rax, rax
  0003d	74 34		 je	 SHORT $LN13@CreateInst
  0003f	48 83 63 18 00	 and	 QWORD PTR [rbx+24], 0
  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CPdnShellExtension@@6BIPersistFile@@@
  0004b	48 89 03	 mov	 QWORD PTR [rbx], rax
  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CPdnShellExtension@@6BIExtractImage@@@
  00055	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax
  00059	83 c8 ff	 or	 eax, -1
  0005c	c7 43 10 01 00
	00 00		 mov	 DWORD PTR [rbx+16], 1
  00063	89 43 20	 mov	 DWORD PTR [rbx+32], eax
  00066	89 43 24	 mov	 DWORD PTR [rbx+36], eax
  00069	f0 83 05 00 00
	00 00 01	 lock add DWORD PTR ?g_lRefCount@@3JC, 1 ; g_lRefCount
  00071	eb 02		 jmp	 SHORT $LN14@CreateInst
$LN13@CreateInst:
  00073	33 db		 xor	 ebx, ebx
$LN14@CreateInst:

; 117  : 
; 118  :         if (NULL == pShellExtension)

  00075	48 85 db	 test	 rbx, rbx
  00078	75 07		 jne	 SHORT $LN29@CreateInst

; 119  :         {
; 120  :             hr = E_OUTOFMEMORY;

  0007a	bf 0e 00 07 80	 mov	 edi, -2147024882	; ffffffff8007000eH

; 121  :         }
; 122  :     }
; 123  : 
; 124  :     if (SUCCEEDED(hr))

  0007f	eb 19		 jmp	 SHORT $LN2@CreateInst
$LN29@CreateInst:

; 125  :     {
; 126  :         hr = pShellExtension->QueryInterface(riid, ppvObject);

  00081	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00084	4c 8b c7	 mov	 r8, rdi
  00087	48 8b d6	 mov	 rdx, rsi
  0008a	48 8b cb	 mov	 rcx, rbx
  0008d	ff 10		 call	 QWORD PTR [rax]

; 127  :         pShellExtension->Release();

  0008f	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00092	48 8b cb	 mov	 rcx, rbx
  00095	8b f8		 mov	 edi, eax
  00097	ff 52 10	 call	 QWORD PTR [rdx+16]
$LN2@CreateInst:

; 128  :     }
; 129  : 
; 130  :     TraceLeaveHr(hr);
; 131  :     return hr;
; 132  : }

  0009a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009f	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000a4	8b c7		 mov	 eax, edi
  000a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z ENDP ; CClassFactory::CreateInstance
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCClassFactory@@QEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+41
	DD	imagerel $unwind$??_GCClassFactory@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCClassFactory@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogspy
xdata	ENDS
;	COMDAT ??_GCClassFactory@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCClassFactory@@QEAAPEAXI@Z PROC			; CClassFactory::`scalar deleting destructor', COMDAT
$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CClassFactory@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f0 83 05 00 00
	00 00 ff	 lock add DWORD PTR ?g_lRefCount@@3JC, -1 ; g_lRefCount
  0001b	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  00020	48 8b c3	 mov	 rax, rbx
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5b		 pop	 rbx
  00028	c3		 ret	 0
??_GCClassFactory@@QEAAPEAXI@Z ENDP			; CClassFactory::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CClassFactory@@UEAAKXZ DD imagerel $LN14
	DD	imagerel $LN14+52
	DD	imagerel $unwind$?Release@CClassFactory@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CClassFactory@@UEAAKXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogspy
xdata	ENDS
;	COMDAT ?Release@CClassFactory@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CClassFactory@@UEAAKXZ PROC			; CClassFactory::Release, COMDAT

; 75   : {

$LN14:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 76   :     DWORD dwNewRC = InterlockedDecrement(&m_lRefCount);

  00004	83 c8 ff	 or	 eax, -1
  00007	f0 0f c1 41 08	 lock xadd DWORD PTR [rcx+8], eax
  0000c	83 c0 ff	 add	 eax, -1

; 77   : 
; 78   :     if (0 == dwNewRC)

  0000f	75 1e		 jne	 SHORT $LN2@Release@3

; 79   :     {
; 80   :         delete this;

  00011	48 85 c9	 test	 rcx, rcx
  00014	74 17		 je	 SHORT $LN5@Release@3
  00016	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7CClassFactory@@6B@
  0001d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00020	f0 83 05 00 00
	00 00 ff	 lock add DWORD PTR ?g_lRefCount@@3JC, -1 ; g_lRefCount
  00028	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN5@Release@3:

; 81   :         return 0;

  0002d	33 c0		 xor	 eax, eax
$LN2@Release@3:

; 82   :     }
; 83   :     else
; 84   :     {
; 85   :         return dwNewRC;
; 86   :     }
; 87   : }

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
?Release@CClassFactory@@UEAAKXZ ENDP			; CClassFactory::Release
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN19
	DD	imagerel $LN19+127
	DD	imagerel $unwind$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogspy
; File e:\my_project\openpdn\openpdn-e28f1ff0077e\src\shellextension\classfactory.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppReturn$ = 64
?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CClassFactory::QueryInterface, COMDAT

; 44   : {

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 45   :     TraceEnter();
; 46   :     TraceOut("riid=%S", GuidToString(riid));
; 47   :     *ppReturn = NULL;

  00004	49 83 20 00	 and	 QWORD PTR [r8], 0

; 48   : 
; 49   :     if (IsEqualCLSID (riid, IID_IUnknown))

  00008	4c 8b 12	 mov	 r10, QWORD PTR [rdx]
  0000b	4c 8d 1d 00 00
	00 00		 lea	 r11, OFFSET FLAT:__ImageBase
  00012	4d 8b c8	 mov	 r9, r8
  00015	4d 3b 93 00 00
	00 00		 cmp	 r10, QWORD PTR IID_IUnknown[r11]
  0001c	75 11		 jne	 SHORT $LN17@QueryInter@3
  0001e	4c 8b 52 08	 mov	 r10, QWORD PTR [rdx+8]
  00022	4d 3b 93 08 00
	00 00		 cmp	 r10, QWORD PTR IID_IUnknown[r11+8]
  00029	75 04		 jne	 SHORT $LN17@QueryInter@3
  0002b	33 c0		 xor	 eax, eax
  0002d	eb 05		 jmp	 SHORT $LN18@QueryInter@3
$LN17@QueryInter@3:
  0002f	1b c0		 sbb	 eax, eax
  00031	83 d8 ff	 sbb	 eax, -1
$LN18@QueryInter@3:
  00034	85 c0		 test	 eax, eax
  00036	75 05		 jne	 SHORT $LN6@QueryInter@3

; 50   :     {
; 51   :         *ppReturn = this;

  00038	49 89 08	 mov	 QWORD PTR [r8], rcx
  0003b	eb 29		 jmp	 SHORT $LN4@QueryInter@3
$LN6@QueryInter@3:

; 52   :     }
; 53   :     else if (IsEqualCLSID (riid, IID_IClassFactory))

  0003d	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
  00040	4d 3b 83 00 00
	00 00		 cmp	 r8, QWORD PTR IID_IClassFactory[r11]
  00047	75 11		 jne	 SHORT $LN15@QueryInter@3
  00049	4c 8b 42 08	 mov	 r8, QWORD PTR [rdx+8]
  0004d	4d 3b 83 08 00
	00 00		 cmp	 r8, QWORD PTR IID_IClassFactory[r11+8]
  00054	75 04		 jne	 SHORT $LN15@QueryInter@3
  00056	33 c0		 xor	 eax, eax
  00058	eb 05		 jmp	 SHORT $LN16@QueryInter@3
$LN15@QueryInter@3:
  0005a	1b c0		 sbb	 eax, eax
  0005c	83 d8 ff	 sbb	 eax, -1
$LN16@QueryInter@3:
  0005f	85 c0		 test	 eax, eax
  00061	75 12		 jne	 SHORT $LN3@QueryInter@3

; 54   :     {
; 55   :         *ppReturn = (IClassFactory *)this;

  00063	49 89 09	 mov	 QWORD PTR [r9], rcx
$LN4@QueryInter@3:

; 56   :     }
; 57   : 
; 58   :     if (*ppReturn != NULL)

  00066	48 85 c9	 test	 rcx, rcx
  00069	74 0a		 je	 SHORT $LN3@QueryInter@3

; 59   :     {
; 60   :         (*(LPUNKNOWN *)ppReturn)->AddRef();

  0006b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0006e	ff 50 08	 call	 QWORD PTR [rax+8]

; 61   :         TraceLeaveHr(S_OK);
; 62   :         return S_OK;

  00071	33 c0		 xor	 eax, eax
  00073	eb 05		 jmp	 SHORT $LN9@QueryInter@3
$LN3@QueryInter@3:

; 63   :     }
; 64   : 
; 65   :     TraceLeaveHr(E_NOINTERFACE);
; 66   :     return E_NOINTERFACE;

  00075	b8 02 40 00 80	 mov	 eax, -2147467262	; ffffffff80004002H
$LN9@QueryInter@3:

; 67   : }

  0007a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007e	c3		 ret	 0
?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CClassFactory::QueryInterface
END
